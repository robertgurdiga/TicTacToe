import java.util.Scanner;
public class Main {
    static void tabla(int[][] table,int x,int y){
        int i,j;
        for(i=0;i<3;i++){
        System.out.println();
    for(j=0;j<3;j++){
    if(table[i][j]==1){
        System.out.print("x ");}
        else if(table[i][j]==2){
            System.out.print("o ");}
            else if(table[i][j]==0){
                System.out.print("- ");
                }
            }}
}
static Scanner read =new Scanner(System.in);
static void inputx(int table[][],int posx,int posy){
    System.out.println();
    System.out.println("Alege pozitia lui x");
    posx=read.nextInt();
    posy=read.nextInt();
    while(table[posx][posy]!=0){
        System.out.println("Alege alta pozitie a lui x");
        posx=read.nextInt();
        posy=read.nextInt();
        }
}
static void inputo(int table[][],int posx,int posy){
    System.out.println("Alege pozitia lui x");
    posx=read.nextInt();
    posy=read.nextInt();
    while(table[posx][posy]!=0){
        System.out.println("Alege alta pozitie a lui x");
        posx=read.nextInt();
        posy=read.nextInt();
        }
}
static int over(int table[][],int q,int gameover){
    if(table[0][0]==table[0][1] && table[0][1]==table[0][2] && table[0][0]!=0 || table[1][0]==table[1][1] && table[1][1]==table[1][2] && table[1][0]!=0 || table[2][0]==table[2][1] && table[2][1]==table[2][2] && table[2][0]!=0 ||  
    table[0][0]==table[1][0] && table[1][0]==table[2][0] && table[0][0]!=0 || table[0][1]==table[1][1] && table[1][1]==table[2][1] && table[0][1]!=0 || table[0][2]==table[0][1] && table[0][1]==table[0][0] && table[0][2]!=0 ||
    table[0][0]==table[1][1] && table[1][1]==table[2][2] && table[0][0]!=0 || table[2][0]==table[1][1] && table[1][1]==table[0][2] && table[1][1]!=0){
         if(q==1){
             System.out.println();
            gameover=0;
            System.out.println("x wins!");
            return gameover;
            }
             else if(q==0){
                 System.out.println();
                 gameover=0;
                 System.out.println("o wins!");
                 return gameover;
                 }
 }
 else{
 int v=0;
 for(int i=0;i<3;i++)
 for(int j=0;j<3;j++){
    if(table[i][j]!=0){
        v++;
    }
 }
 if(v==9){
    System.out.println();
    System.out.println("Draw");
    gameover=0;
 }}
     return gameover;
}
static void AIO(int[][] table, int i, int j) {
    if(table[1][0]==table[1][1] && table[1][2]==0 && table[1][0]==1 || table[0][2]==table[2][2] && table[1][2]==0 && table[0][2]==1){
        table[1][2]=2;
    }
        else if(table[2][0]==table[2][1] && 0==table[2][2] && table[2][0]==1 || table[0][0]==table[1][1] && 0==table[2][2] && table[0][0]==1){
            table[2][2]=2;
}
            else if(table[0][0]==table[1][0] && 0==table[2][0] && table[0][0]==1 || table[2][1]==table[2][2] && table[2][0]==0 && table[2][1]==1 || table[0][2]==table[1][1] && table[2][0]==0 && table[0][2]==1){
                   table[2][0]=2;
                }
                   else if(table[0][1]==table[1][1] && 0==table[2][1] && table[0][1]==1 || table[2][0]==table[2][2] && table[2][1]==0 && table[2][0]==1 || table[1][1]==table[2][0] && table[0][2]==0 && table[2][0]==1){
                       table[2][1]=2;
                    }
                       else if(table[0][2]==table[0][1] && 0==table[0][0] && table[0][2]==1 || table[1][1]==table[2][2] && table[0][0]==0 && table[1][1]==1 || table[1][0]==table[2][0] && table[0][0]==0 && table[2][0]==1){
                           table[0][0]=2;
                        }
                               else if(table[2][0]==table[1][1] && 0==table[0][2] && table[1][1]==1 || table[0][0]==table[0][1] && 0==table[0][2] && table[0][0]==1 || table[1][2]==table[2][2] && 0==table[0][2] && table[1][2]==1){
                                   table[0][2]=2;
                                }
                                   else if(table[0][0]==table[0][2] && table[0][1]==0 && table[0][0]==1 || table[1][1]==table[2][1] && table[0][1]==0 && table[1][1]==1){
                                    table[0][1]=2;  
                                }
                                   else if(table[0][0]==table[2][0] && table[1][0]==0 && table[0][0]==1 || table[1][1]==table[2][1] && table[0][1]==0 && table[1][1]==1){
                                    table[1][0]=2;  
                                }
                                   else if(table[0][0]==table[2][2] && table[1][1]==0 && table[0][0]==1 || table[2][0]==table[0][2] && table[1][1]==0 && table[2][0]==1 || table[0][1]==table[2][1] && table[1][1]==0 && table[0][1]==1 || table[1][0]==table[1][2] && table[1][1]==0 && table[1][0]==1){
                                    table[1][1]=2;
                                   }
    else {
        int r=0;
        for (i = 0; i < 3; i++) {
            for (j = 0; j < 3 && r==0; j++) {
                if (table[i][j] == 0) {
                    table[i][j] = 2;
                    r=1;
                }
            }
        }
    }
}


static void AIX(int[][] table,int i,int j){
        if(table[1][0]==table[1][1] && table[1][2]==0 && table[1][0]==2 || table[0][2]==table[2][2] && table[1][2]==0 && table[0][2]==2){
            table[1][2]=1;}
            else if(table[2][0]==table[2][1] && 0==table[2][2] && table[2][0]==2 || table[0][0]==table[1][1] && 0==table[2][2] && table[0][0]==2){
                table[2][2]=1;}
                else if(table[0][0]==table[1][0] && 0==table[2][0] && table[0][0]==2 || table[2][1]==table[2][2] && table[2][0]==0 && table[2][1]==2 || table[0][2]==table[1][1] && table[0][2]==2 && table[2][0]==0){
                       table[2][0]=1;}
                       else if(table[0][1]==table[1][1] && 0==table[2][1] && table[0][1]==2 || table[2][0]==table[2][2] && table[2][1]==0 && table[2][0]==2){
                           table[2][1]=1;}
                           else if(table[0][2]==table[0][1] && 0==table[0][0] && table[0][2]==2 || table[1][1]==table[2][2] && table[0][0]==0 && table[1][1]==2 || table[1][0]==table[2][0] && table[0][0]==0 && table[2][0]==2){
                               table[0][0]=1;}
                                   else if(table[2][0]==table[1][1] && 0==table[0][2] && table[1][1]==2 || table[0][0]==table[0][1] && 0==table[0][2] && table[0][0]==2 || table[2][2]==table[1][2] && table[0][2]==0 && table[1][2]==2){
                                       table[0][2]=1;}
                                       else if(table[0][0]==table[0][2] && table[0][1]==0 && table[0][0]==2 || table[1][1]==table[2][1] && table[0][1]==0 && table[1][1]==2){
                                        table[0][1]=1;
                                       }
                                       else if(table[0][0]==table[2][0] && table[1][0]==0 && table[0][0]==2 || table[1][1]==table[2][1] && table[0][1]==0 && table[1][1]==2){
                                        table[1][0]=1;
                                       }
                                       else if(table[0][0]==table[2][2] && table[1][1]==0 && table[0][0]==2 || table[2][0]==table[0][2] && table[1][1]==0 && table[2][0]==2 || table[0][1]==table[2][1] && table[1][1]==0 && table[0][1]==2 || table[1][0]==table[1][2] && table[1][1]==0 && table[1][0]==2){
                                        table[1][1]=1;
                                       }
                                       else {
                                        int r=0;
                                        for (i = 0; i < 3; i++) {
                                            for (j = 0; j < 3 && r==0; j++) {
                                                if (table[i][j] == 0) {
                                                    table[i][j] = 1;
                                                    r=1;
                                                }
                                            }
                                        }
                                    }}
       
    public static void main(String[] args) {
    int[][] table=new int[3][3];
    int posx=0,posy=0,i=0,j=0,q=1,gameover=1;
    System.out.println("Type 1 if you wish to play as 'x' with AI, 2 if you wish to play as 'o' with AI, 3 if you wish to let AI play eachother, or 0 if you wish to play against your friend");
        int AI=read.nextInt();
    for(i=0;i<3;i++)
    System.out.println("- - -");
   
    i=0;
    while(gameover==1){
        if(q==1 && AI==1){
            System.out.println();
            System.out.println("Alege pozitia lui x");
            posx=read.nextInt();
            posy=read.nextInt();
            while(table[posx][posy]!=0){
                System.out.println("Alege alta pozitie a lui x");
                posx=read.nextInt();
                posy=read.nextInt();
                }            
                table[posx][posy]=1;
        tabla(table,posx,posy);
      gameover=over(table,q,gameover);
     q=0;
    }
    else if(q==0 && AI==1){
     AIO(table,i,j);
    tabla(table,i,j);
    gameover=over(table,q,gameover);
    q=1;
}
    else if(q==1 && AI==2){
     AIX(table,i,j);
    tabla(table,i,j);
    gameover=over(table,q,gameover);
q=0;
}
    else if(q==0 && AI==2){
        System.out.println();
        System.out.println("Alege pozitia lui o");
        posx=read.nextInt();
        posy=read.nextInt();
        while(table[posx][posy]!=0){
            System.out.println("Alege alta pozitie a lui o");
            posx=read.nextInt();
            posy=read.nextInt();
            }            
            table[posx][posy]=2;
        tabla(table,posx,posy);
        gameover=over(table,q,gameover);
        q=1;
     }
    else if(q==0 && AI==0){
        System.out.println();
        System.out.println("Alege pozitia lui o");
        posx=read.nextInt();
        posy=read.nextInt();
        while(table[posx][posy]!=0){
            System.out.println("Alege alta pozitie a lui o");
            posx=read.nextInt();
            posy=read.nextInt();
            }                    
            table[posx][posy]=2;
    tabla(table,posx,posy);
    gameover=over(table,q,gameover);
 q=1;
}
    else if(q==1 && AI==0){
        System.out.println();
        System.out.println("Alege pozitia lui x");
        posx=read.nextInt();
        posy=read.nextInt();
        while(table[posx][posy]!=0){
            System.out.println("Alege alta pozitie a lui x");
            posx=read.nextInt();
            posy=read.nextInt();
            }                
            table[posx][posy]=1;
    tabla(table,posx,posy);
    gameover=over(table,q,gameover);
    q=0;
    }
    else if(AI==3 && q==1){
         AIX(table,i,j);
    tabla(table,i,j);
    gameover=over(table,q,gameover);
 try {
            System.out.println("Starting delay...");
            Thread.sleep(2000); 
            System.out.println("2 seconds passed!");
        } catch (InterruptedException e) {
            System.out.println("Thread was interrupted!");
        }q=0;
    }
    else if(AI==3 && q==0){
          AIO(table,i,j);
    tabla(table,i,j);
    gameover=over(table,q,gameover);
 try {
            System.out.println("Starting delay...");
            Thread.sleep(2000); 
            System.out.println("2 seconds passed!");
        } catch (InterruptedException e) {
            System.out.println("Thread was interrupted!");
        }    q=1;   
    }
    }}}














